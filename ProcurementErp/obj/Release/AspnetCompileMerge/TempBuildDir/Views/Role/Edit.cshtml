@model ProcurementErp.ViewModels.RolesViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var listItems = new List<SelectListItem>()
    {
    new SelectListItem {Text = "Active",   Value = "Active"},
    new SelectListItem {Text = "Disable", Value = "Disable"}
    };
}
<div class="content-wrapper">
    <!-- Content Header (Page header) -->
    <section class="content-header">
        <h1>
            Edit Role
        </h1>
        <ol class="breadcrumb">
            <li><a href="#"><i class="fa fa-dashboard"></i> Home</a></li>
            <li>Role</li>
            <li class="active">Edit Role</li>
        </ol>
    </section>
    <section class="content" id="Roles">
        <div class="row">
            <div class="col-md-12">
                <div class="box box-primary">
                    <div class="box-header with-border">
                        <p>
                            <a href="@Url.Action("Index", "Role")" class="btn btn-sm btn-primary">Back to List</a>
                        </p>
                    </div>
                    <div class="box-body">
                        @using (Html.BeginForm("Edit", "Role", FormMethod.Post, new { role = "form", @class = "form col-md-8 col-md-offset-2" }))
                        {
                            @Html.AntiForgeryToken()

                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @if (ViewBag.ErrorMessage != null)
                                {
                                    <p class="form-control-static text-danger">@ViewBag.ErrorMessage</p>
                                }
                                <div class="form-group">
                                    @Html.LabelFor(model => model.ROLE_NAME, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.EditorFor(model => model.ROLE_NAME, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.ROLE_NAME, "", new { @class = "text-danger" })
                                        @Html.HiddenFor(model => model.ROLE_ID, new { htmlAttributes = new { @class = "form-control" } })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.STATUS, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-8">
                                        @Html.DropDownListFor(model => model.STATUS, listItems, new { @class = "form-control" } )
                                        @Html.ValidationMessageFor(model => model.STATUS, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-4 col-md-4">
                                        <input type="submit" value="Save" class="btn btn-default" />
                                    </div>
                                </div>
                            </div>
                        }
                        </div>
                    </div>
            </div>
        </div>
    </section>
</div>
